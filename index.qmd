---
title: "델리민주 유튜브 대시보드"
format: 
  dashboard:
    logo: assets/daily_minju.jpg
    orientation: rows
editor_options: 
  chunk_output_type: console
---

{{< include channel.qmd >}}

{{< include comments_stat.qmd >}}

# 댓글 감성분석


```{r}
library(readr)

comment_sentiment_stat <- readr::read_csv("data/comment_sentiment_stat_all.csv")

comment_sentiment_all <- comment_sentiment_stat |> 
  summarise(긍정 = sum(긍정),
            부정 = sum(부정),
            중립 = sum(중립)) |> 
  mutate(긍정비율 = 긍정 / sum(긍정, 부정, 중립),
         중립비율 = 중립 / sum(긍정, 부정, 중립),
         부정비율 = 부정 / sum(긍정, 부정, 중립))

```


## Row

```{r}
#| content: valuebox
#| title: "긍정 댓글 (비율)"

list(
  icon = "hospital",
  color = "green",
   value = as.character(str_glue("{scales::comma(comment_sentiment_all$긍정)} ({scales::percent(comment_sentiment_all$긍정비율)})"))
)
```

```{r}
#| content: valuebox
#| title: "중립 댓글 (비율)"

list(
  icon = "moon-fill",
  color = "yellow",
  value = as.character(str_glue("{scales::comma(comment_sentiment_all$중립)} ({scales::percent(comment_sentiment_all$중립비율)})"))
)
```


```{r}
#| content: valuebox
#| title: "부정 댓글 (비율)"

list(
  icon = "heart-fill",
  color = "red",
  value = as.character(str_glue("{scales::comma(comment_sentiment_all$부정)} ({scales::percent(comment_sentiment_all$부정비율)})"))
)
```

## Column

::: {.card}

```{r}
library(reactable)

comment_sentiment_stat |> 
  arrange(desc(긍정)) |> 
  rename(vidoe_id = videoId) |> 
  reactable(
      searchable = TRUE,
      defaultColDef = colDef(
        header = function(value) gsub(".", " ", value, fixed = TRUE),
        align = "center",
        minWidth = 60,
        headerStyle = list(background = "#f7f7f8")
      ),
      columns = list(
        vidoe_id = colDef(html = TRUE, cell = JS("
          function(cellInfo) {
            // Render as a link
            return '<a href=https://www.youtube.com//watch?v=' + cellInfo.value + '/>' + cellInfo.value + '</a>'
          }"),
        minWidth = 100
        ),
        댓글수 = colDef(format = colFormat(separators = TRUE,  digits = 0)),
        긍정   = colDef(format = colFormat(separators = TRUE,  digits = 0)),
        중립   = colDef(format = colFormat(separators = TRUE,  digits = 0)),
        부정   = colDef(format = colFormat(separators = TRUE,  digits = 0)),
        긍정비율   = colDef(format = colFormat(percent = TRUE, digits = 1)),
        중립비율   = colDef(format = colFormat(percent = TRUE, digits = 1)),
        부정비율   = colDef(format = colFormat(percent = TRUE, digits = 1)),
      bordered = TRUE,
      highlight = TRUE    
    )
  )

```


:::

::: {.card}

```{r, load_kpop}
#| echo: false
#| include: false
#| eval: true

comment_sentiment_stat <- comment_sentiment_stat |> 
  arrange(desc(긍정)) |> 
  mutate(across(c(긍정비율, 중립비율, 부정비율), ~ scales::percent(.x, accuracy = 0.1)))

ojs_define(sentiment_ojs = comment_sentiment_stat)
```


```{ojs}
//| expandable: false

// Tranpose the data to  make it usable in ojs
youtube_sentiment = transpose(sentiment_ojs)

// Create a dropdown menu of the youtube
viewof youtubeDropdown = Inputs.select(
  youtube_sentiment.map(d => d.videoId),
  {
    label: "동영상 선택하세요",
    unique: true
  }
)
```


```{ojs}
//| expandable: false
html`<iframe width="560" height="315" 
  src=${`https://www.youtube.com/embed/${youtubeDropdown}`} 
  title="YouTube video player" 
  frameborder="0" 
  allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" 
  referrerpolicy="strict-origin-when-cross-origin" 
  allowfullscreen>
</iframe>`
```

```{ojs}
//| expandable: false
Inputs.table(
  youtube_sentiment.filter(d => d.videoId === youtubeDropdown),
  {
    layout: "auto",
    columns: ["긍정", "부정", "중립", "댓글수", "긍정비율", "중립비율", "부정비율"]
  }
)
```


:::

